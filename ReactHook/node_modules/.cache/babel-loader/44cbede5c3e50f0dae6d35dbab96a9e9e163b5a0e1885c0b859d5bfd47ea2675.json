{"ast":null,"code":"var _jsxFileName = \"/home/tuannn2/tosspedia/react-app/my-app/src/views/Example/ChildComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChildComponent = () => {\n  _s();\n  const [showJobs, setShowJobs] = useState(false);\n  handleShowHide = () => {\n    setShowJobs(!this.state.showJobs);\n  };\n  let {\n    infors\n  } = this.props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showJobs === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.handleShowHide();\n        },\n        children: \"Show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-lists\",\n        children: infors.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [item.title, \" -\", item.salary]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.handleShowHide(),\n          children: \"Hide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(ChildComponent, \"jdzLP5eOSmEoK+UEPuNpogXA9eg=\");\n_c = ChildComponent;\nexport default ChildComponent;\nvar _c;\n$RefreshReg$(_c, \"ChildComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ChildComponent","_s","showJobs","setShowJobs","handleShowHide","state","infors","props","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","map","item","index","title","salary","id","_c","$RefreshReg$"],"sources":["/home/tuannn2/tosspedia/react-app/my-app/src/views/Example/ChildComponent.js"],"sourcesContent":["import React, {useState} from \"react\";\n\nconst ChildComponent = () => {\n\n    const [showJobs,setShowJobs] = useState(false)\n\n    handleShowHide =() => {\n        setShowJobs(!this.state.showJobs)\n    }\n    \n    let {infors} = this.props;\n    return (\n        <>\n            { \n            showJobs === false?\n                <div>\n                    <button onClick={() => {this.handleShowHide()}} >Show</button>\n                </div> \n            :\n                <div>\n                    <div className=\"job-lists\">\n                    {\n                        infors.map((item,index) =>{\n                            return (\n                                <div key={item.id}>\n                                    {item.title} -{item.salary}\n                                </div>\n                            )   \n                        })\n                    }\n                    </div>\n                    <div>\n                        <button onClick={() => this.handleShowHide()} >Hide</button>\n                    </div>\n                </div>\n\n            }\n\n        </>\n\n    )\n    \n}\n\nexport default ChildComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEzB,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE9CS,cAAc,GAAEA,CAAA,KAAM;IAClBD,WAAW,CAAC,CAAC,IAAI,CAACE,KAAK,CAACH,QAAQ,CAAC;EACrC,CAAC;EAED,IAAI;IAACI;EAAM,CAAC,GAAG,IAAI,CAACC,KAAK;EACzB,oBACIV,OAAA,CAAAE,SAAA;IAAAS,QAAA,EAEIN,QAAQ,KAAK,KAAK,gBACdL,OAAA;MAAAW,QAAA,eACIX,OAAA;QAAQY,OAAO,EAAEA,CAAA,KAAM;UAAC,IAAI,CAACL,cAAc,EAAE;QAAA,CAAE;QAAAI,QAAA,EAAE;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5D,gBAENhB,OAAA;MAAAW,QAAA,gBACIX,OAAA;QAAKiB,SAAS,EAAC,WAAW;QAAAN,QAAA,EAEtBF,MAAM,CAACS,GAAG,CAAC,CAACC,IAAI,EAACC,KAAK,KAAI;UACtB,oBACIpB,OAAA;YAAAW,QAAA,GACKQ,IAAI,CAACE,KAAK,EAAC,IAAE,EAACF,IAAI,CAACG,MAAM;UAAA,GADpBH,IAAI,CAACI,EAAE;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAEX;QAEd,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEA,eACNhB,OAAA;QAAAW,QAAA,eACIX,OAAA;UAAQY,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACL,cAAc,EAAG;UAAAI,QAAA,EAAE;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAS;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC1D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ,iBAIX;AAIX,CAAC;AAAAZ,EAAA,CAxCKD,cAAc;AAAAqB,EAAA,GAAdrB,cAAc;AA0CpB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}