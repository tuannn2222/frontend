{"ast":null,"code":"var _jsxFileName = \"/home/tuannn2/tosspedia/react-app/my-app/src/views/Example/Test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport AddTest from \"./AddTest\";\nimport Output from \"./Output\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  // const arrayvalue = [\"bus\", \"cycle\"] \n\n  const [list, setList] = useState([\"bus\", \"cycle\"]);\n  const addTest = value => {\n    setList([...list, value]);\n  };\n  const deleteValue = index => {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AddTest, {\n      addTest: addTest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Output, {\n      array: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Test, \"TUImO9K81SMdxTjbW+sprRYfFog=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useEffect","useState","AddTest","Output","jsxDEV","_jsxDEV","Fragment","_Fragment","Test","_s","list","setList","addTest","value","deleteValue","index","children","fileName","_jsxFileName","lineNumber","columnNumber","array","_c","$RefreshReg$"],"sources":["/home/tuannn2/tosspedia/react-app/my-app/src/views/Example/Test.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport AddTest from \"./AddTest\";\nimport Output from \"./Output\";\n\n\nconst Test = () => {\n    // const arrayvalue = [\"bus\", \"cycle\"] \n   \n    const [list, setList] = useState([\"bus\", \"cycle\"])\n\n\n    const addTest = (value) => {\n        setList([...list,value])\n    }\n\n    const deleteValue = (index) => {\n\n    }\n\n    return (\n        <>\n            <AddTest addTest ={addTest}/>\n            {/* <div>\n                {\n                    list.map((item,index) => {\n                        return (\n                            <div key={index}>\n                                <li> {item}</li>  \n                            </div>\n                        )\n                    })\n                }\n            </div> */}\n            <Output array ={list} />\n        </>\n    )\n\n}\n\nexport default Test;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG9B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf;;EAEA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;EAGlD,MAAMW,OAAO,GAAIC,KAAK,IAAK;IACvBF,OAAO,CAAC,CAAC,GAAGD,IAAI,EAACG,KAAK,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,WAAW,GAAIC,KAAK,IAAK,CAE/B,CAAC;EAED,oBACIV,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACIX,OAAA,CAACH,OAAO;MAACU,OAAO,EAAGA;IAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAY7Bf,OAAA,CAACF,MAAM;MAACkB,KAAK,EAAGX;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,gBACzB;AAGX,CAAC;AAAAX,EAAA,CAhCKD,IAAI;AAAAc,EAAA,GAAJd,IAAI;AAkCV,eAAeA,IAAI;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}