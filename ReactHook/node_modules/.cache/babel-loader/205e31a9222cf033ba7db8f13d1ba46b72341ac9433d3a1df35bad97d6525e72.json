{"ast":null,"code":"var _jsxFileName = \"/home/tuannn2/tosspedia/react-app/my-app/src/views/Example/TestUseState/Radio.js\";\nimport { React, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Radio = () => {\n  const json = [{\n    id: 1,\n    text: \"java\"\n  }, {\n    id: 2,\n    text: \"java\"\n  }, {\n    id: 3,\n    text: \"java\"\n  }];\n  // const [data,setData] = useState(json);\n  // const []\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: json && json.map(node => {\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", node.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)]\n      }, node.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false);\n};\n_c = Radio;\nexport default Radio;\nvar _c;\n$RefreshReg$(_c, \"Radio\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Radio","json","id","text","children","map","node","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/tuannn2/tosspedia/react-app/my-app/src/views/Example/TestUseState/Radio.js"],"sourcesContent":["import {React, useState} from \"react\"\n\n\nconst Radio = () => {\n    const json = [\n        {\n            id: 1,\n            text: \"java\"\n        },\n        {\n            id: 2,\n            text: \"java\"\n        },\n        {\n            id: 3,\n            text: \"java\"\n        }\n    ]\n    // const [data,setData] = useState(json);\n    // const []\n\n    return (\n        <>\n            {json&&\n                json.map(node => {\n                    <div key={node.id}>\n                        <input type=\"radio\" />\n                        <li> {node.id}</li>\n                    </div>\n                })\n            }\n        </>\n    )\n}\n\nexport default Radio"],"mappings":";AAAA,SAAQA,KAAK,EAAEC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGrC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAChB,MAAMC,IAAI,GAAG,CACT;IACIC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;EACV,CAAC,EACD;IACID,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;EACV,CAAC,EACD;IACID,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;EACV,CAAC,CACJ;EACD;EACA;;EAEA,oBACIN,OAAA,CAAAE,SAAA;IAAAK,QAAA,EACKH,IAAI,IACDA,IAAI,CAACI,GAAG,CAACC,IAAI,IAAI;MACb,aAAAT,OAAA;QAAAO,QAAA,gBACIP,OAAA;UAAOU,IAAI,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eACtBd,OAAA;UAAAO,QAAA,GAAI,GAAC,EAACE,IAAI,CAACJ,EAAE;QAAA;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM;MAAA,GAFbL,IAAI,CAACJ,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAGX;IACV,CAAC;EAAC,iBAEP;AAEX,CAAC;AAAAC,EAAA,GA9BKZ,KAAK;AAgCX,eAAeA,KAAK;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}