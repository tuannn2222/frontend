{"ast":null,"code":"var _jsxFileName = \"/home/tuannn2/tosspedia/react-app/my-app/src/views/Example/TestUseState/Radio.js\";\nimport { React, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Radio = () => {\n  const json = [{\n    id: 1,\n    text: \"javascript\"\n  }, {\n    id: 2,\n    text: \"java\"\n  }, {\n    id: 3,\n    text: \"ReactJS\"\n  }];\n  // const [data,setData] = useState(json);\n  // const []\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"tuan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), json && json.map(node => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: node.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 29\n        }, this)\n      }, node.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this);\n    })]\n  }, void 0, true);\n};\n_c = Radio;\nexport default Radio;\nvar _c;\n$RefreshReg$(_c, \"Radio\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Radio","json","id","text","children","fileName","_jsxFileName","lineNumber","columnNumber","map","node","type","value","_c","$RefreshReg$"],"sources":["/home/tuannn2/tosspedia/react-app/my-app/src/views/Example/TestUseState/Radio.js"],"sourcesContent":["import {React, useState} from \"react\"\n\n\nconst Radio = () => {\n    const json = [\n        {\n            id: 1,\n            text: \"javascript\"\n        },\n        {\n            id: 2,\n            text: \"java\"\n        },\n        {\n            id: 3,\n            text: \"ReactJS\"\n        }\n    ]\n    // const [data,setData] = useState(json);\n    // const []\n\n    return (\n        <>  \n            <h1>tuan</h1>\n            {json&&\n                json.map(node => {\n                    return (\n                        <div key={node.id}>\n                            <input type=\"radio\" value={node.text}/> \n                        </div>\n                    )\n                })\n            }\n        </>\n    )\n}\n\nexport default Radio"],"mappings":";AAAA,SAAQA,KAAK,EAAEC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGrC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAChB,MAAMC,IAAI,GAAG,CACT;IACIC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;EACV,CAAC,EACD;IACID,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;EACV,CAAC,EACD;IACID,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;EACV,CAAC,CACJ;EACD;EACA;;EAEA,oBACIN,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACIP,OAAA;MAAAO,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EACZP,IAAI,IACDA,IAAI,CAACQ,GAAG,CAACC,IAAI,IAAI;MACb,oBACIb,OAAA;QAAAO,QAAA,eACIP,OAAA;UAAOc,IAAI,EAAC,OAAO;UAACC,KAAK,EAAEF,IAAI,CAACP;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAE,GADjCE,IAAI,CAACR,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEX;IAEd,CAAC,CAAC;EAAA,gBAEP;AAEX,CAAC;AAAAK,EAAA,GAhCKb,KAAK;AAkCX,eAAeA,KAAK;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}